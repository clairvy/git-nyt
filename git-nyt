#! /bin/sh

org_opts=$@
command=$1

base='$(git config nyt.base)'

apply()
{
    eval $(printf $@)
}
diff()
{
    for x in $1
    do 
	if [ "$(eval $(printf 'a=%s;for b in %s;do if [ "$a" = "$b" ]; then echo $a; break; fi; done' $x "$2"))" = "" ] ;then echo $x;fi
    done
}

shift
case ${command} in
  clear) git config --unset nyt.base ;;
  base) git config nyt.base $@ ;;
  list) eval git log --pretty=oneline $base.. $@ | tail -r ;;
  diff) eval git diff $base $@;;
  rebase)
    eval git rebase -i $base $@
    git nyt clear;;
  fixup)
    eval "git reset --mixed $base; git add .; git commit -a $@"
    git nyt clear;;
  fixup-part)
    all=$(git nyt list)
    list=$(cat - | cut -f 1)
    eval git reset --hard $base
    for c in $list; do git cherry-pick $c; done
    git nyt fixup $@
    for c in $(diff "$all" "$list"); do git cherry-pick $c; done
   ;;
  bleis)
	files=$(git diff --pretty=oneline --name-only --cached)
	oldfiles=$(git show --pretty=oneline --name-only HEAD | sed -ne '2,$p')
	if [ "$(diff "$files" "$oldfiles")" = "" ]
	then git commit $@
	else git commit --amend $@
	fi
    ;;
  *)
    git config nyt.base > /dev/null
    if [ "$?" = "1" ]; then
	git nyt base $(git log -1 --format=%H)
    fi
    
    git $org_opts
    ;;
esac

